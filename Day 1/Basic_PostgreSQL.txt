
-- Create Directors Table
CREATE TABLE directors (
    director_id SERIAL PRIMARY KEY,
    director_name VARCHAR(100) NOT NULL
);

-- Create Movies Table
CREATE TABLE movies (
    movie_id SERIAL PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    director_id INT REFERENCES directors(director_id),
    genre VARCHAR(50) NOT NULL,
    rating DECIMAL(3, 1) NOT NULL
);

-- Insert into directors
INSERT INTO directors (director_name) VALUES
('Christopher Nolan'), 
('Steven Spielberg'), 
('Quentin Tarantino'), 
('Greta Gerwig');

-- Insert into movies
INSERT INTO movies (title, director_id, genre, rating) VALUES
('Inception', 1, 'Sci-Fi', 8.8),
('Interstellar', 1, 'Sci-Fi', 8.6),
('Jurassic Park', 2, 'Adventure', 8.1),
('Pulp Fiction', 3, 'Crime', 8.9),
('Barbie', 4, 'Fantasy', 7.0);

-- Simple select
SELECT * FROM movies;

-- Order by rating descending
SELECT title, rating FROM movies ORDER BY rating DESC;

-- Filter by genre
SELECT * FROM movies WHERE genre = 'Sci-Fi';

-- Movies with rating > 8.5
SELECT title FROM movies WHERE rating > 8.5;

-- Pattern match
SELECT title FROM movies WHERE title ILIKE '%e%';

-- Inner Join to see movie and director names
SELECT m.title, d.director_name
FROM movies m
INNER JOIN directors d ON m.director_id = d.director_id;

-- Average rating per director
SELECT d.director_name, AVG(m.rating) AS avg_rating
FROM movies m
JOIN directors d ON m.director_id = d.director_id
GROUP BY d.director_name;

-- Update rating of a movie
UPDATE movies SET rating = 7.5 WHERE title = 'Barbie';

-- Delete a movie
DELETE FROM movies WHERE title = 'Jurassic Park';

-- Drop both tables
DROP TABLE movies;
DROP TABLE directors;
